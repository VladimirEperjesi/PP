<?xml version='1.0' encoding='UTF-8'?>
<purity-config xmlns:comm="http://www.ataccama.com/purity/comment" version="10.5.0.ga-2016-06-24">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Component) --><component id="Component" disabled="false" mode="NORMAL">
		<properties fileName="pathvar://COMPONENTS/cz_phone_numbers.comp">
			<mappings>
				<mappingEndPoint name="in">
					<columnMappings>
						<columnsMapping to="in_number" from="src_contact"/>
					</columnMappings>
				</mappingEndPoint>
				<mappingEndPoint name="out">
					<columnMappings>
						<columnsMapping to="std_idc"/>
						<columnsMapping to="std_phone_number" from="std_contact"/>
						<columnsMapping to="std_extension"/>
						<columnsMapping to="out_idc"/>
						<columnsMapping to="out_phone_number"/>
						<columnsMapping to="out_extension"/>
						<columnsMapping to="out_number" from="cio_contact"/>
						<columnsMapping to="out_comment"/>
						<columnsMapping to="sco_number"/>
						<columnsMapping to="exp_number"/>
					</columnMappings>
				</mappingEndPoint>
			</mappings>
			<parameters/>
		</properties>
		<visual-constraints bounds="384,336,-1,-1" layout="vertical"/>
	</component>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Component" endpoint="out"/>
		<target step="counter_contact_clean_out" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (counter_contact_clean_in) --><step id="counter_contact_clean_in" className="com.ataccama.dqc.tasks.flow.RecordCounter" disabled="false" mode="BYPASS">
		<properties reportPerfPerBatch="true" append="true" reportFileName="\\logger" timeStampFormat="yyyy-MM-dd HH:mm:ss" batchSize="100000" reportPerfPerSecond="true">
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="384,240,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="counter_contact_clean_in" endpoint="out"/>
		<target step="Component" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (counter_contact_clean_out) --><step id="counter_contact_clean_out" className="com.ataccama.dqc.tasks.flow.RecordCounter" disabled="false" mode="BYPASS">
		<properties reportPerfPerBatch="true" append="true" reportFileName="\\logger" timeStampFormat="yyyy-MM-dd HH:mm:ss" batchSize="100000" reportPerfPerSecond="true">
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="384,432,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="counter_contact_clean_out" endpoint="out"/>
		<target step="out" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (in) --><step id="in" className="com.ataccama.dqc.tasks.common.usersteps.io.InputStep" disabled="false" mode="NORMAL">
		<properties>
			<columns>
				<columnDef name="id" type="LONG"/>
				<columnDef name="eng_source_timestamp" type="DATETIME"/>
				<columnDef name="eng_active" type="BOOLEAN"/>
				<columnDef name="eng_origin" type="STRING"/>
				<columnDef name="eng_source_system" type="STRING"/>
				<columnDef name="eng_last_update_date" type="DATETIME"/>
				<columnDef name="eng_last_source_update_date" type="DATETIME"/>
				<columnDef name="eng_creation_date" type="DATETIME"/>
				<columnDef name="eng_deletion_date" type="DATETIME"/>
				<columnDef name="eng_activation_date" type="DATETIME"/>
				<columnDef name="eng_deactivation_date" type="DATETIME"/>
				<columnDef name="source_id" type="STRING"/>
				<columnDef name="src_contact" type="STRING"/>
				<columnDef name="src_type" type="STRING"/>
				<columnDef name="eng_external_record" type="BOOLEAN"/>
				<columnDef name="eng_change_type" type="STRING"/>
				<columnDef name="eng_activity_change_type" type="STRING"/>
			</columns>
			<shadowColumns>
				<shadowColumnDef name="std_contact" type="STRING"/>
				<shadowColumnDef name="cio_contact" type="STRING"/>
				<shadowColumnDef name="sco_contact" defaultExpression="0" type="INTEGER"/>
				<shadowColumnDef name="std_type" type="STRING"/>
			</shadowColumns>
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="384,144,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="in" endpoint="out"/>
		<target step="counter_contact_clean_in" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (out) --><step id="out" className="com.ataccama.dqc.tasks.common.usersteps.io.OutputStep" disabled="false" mode="NORMAL">
		<properties>
			<requiredColumns>
				<requiredColumn name="id" type="LONG"/>
				<requiredColumn name="std_contact" type="STRING"/>
				<requiredColumn name="cio_contact" type="STRING"/>
				<requiredColumn name="sco_contact" type="INTEGER"/>
				<requiredColumn name="std_type" type="STRING"/>
			</requiredColumns>
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="384,528,-1,-1" layout="vertical"/>
	</step>



<modelComment bounds="24,0,1081,97" borderColor="183,183,0" backgroundColor="255,255,180" foregroundColor="51,51,51">•	Create or add logic to cleanse attributes. 
•	Then store the result into std values  (best cleansed value) or optionally also into cio values (cleansed instance output – best value available created as nvl(std_xxx, precleansed value or potentionally src_xxx). 
•	If translation dictionary used (dic_ prefixed values available in this plan), map the dic values into appropriate std and/or cio attributes to complete the dictionary translation process.
•	Also you can store scores or explanations.
Warning: there shouldn’t be any aggregation logic used</modelComment>

</purity-config>