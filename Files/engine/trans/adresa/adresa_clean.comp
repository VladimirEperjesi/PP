<?xml version='1.0' encoding='UTF-8'?>
<purity-config xmlns:comm="http://www.ataccama.com/purity/comment" version="10.5.0.ga-2016-06-24">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Column Assigner) --><step id="Column Assigner" className="com.ataccama.dqc.tasks.expressions.ColumnAssigner" disabled="false" mode="BYPASS">
		<properties whenCondition="std_ruian is not null">
			<assignments>
				<assignment expression="cio_ruian" column="cio_ruian">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="std_ulice" column="cio_ulice">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="cio_cislop" column="cio_cislop">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="cio_cisloev" column="cio_cisloev">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="cio_cisloor" column="cio_cisloor">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="cio_mesto" column="cio_mesto">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
				<assignment expression="cio_psc_id" column="cio_psc_id">
					<scorer>
						<scoringEntries/>
					</scorer>
				</assignment>
			</assignments>
		</properties>
		<visual-constraints bounds="216,480,48,48" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Column Assigner" endpoint="out"/>
		<target step="counter_adresa_clean_out" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Component) --><component id="Component" disabled="false" mode="NORMAL">
		<properties fileName="pathvar://COMPONENTS/cz_address_identifier.comp">
			<mappings>
				<mappingEndPoint name="in">
					<columnMappings>
						<columnsMapping to="in_address_line_1" from="src_ulice"/>
						<columnsMapping to="in_address_line_2" from="src_mesto"/>
						<columnsMapping to="in_address_line_3" from="src_psc_id"/>
					</columnMappings>
				</mappingEndPoint>
				<mappingEndPoint name="out">
					<columnMappings>
						<columnsMapping to="out_address_line_1"/>
						<columnsMapping to="out_address_line_2"/>
						<columnsMapping to="out_address_line_3"/>
						<columnsMapping to="std_address_code" from="std_ruian"/>
						<columnsMapping to="std_zip" from="std_psc_id"/>
						<columnsMapping to="std_city" from="std_mesto"/>
						<columnsMapping to="std_city_district"/>
						<columnsMapping to="std_city_part"/>
						<columnsMapping to="std_street" from="std_ulice"/>
						<columnsMapping to="std_lrn" from="std_cislop"/>
						<columnsMapping to="std_sn" from="std_cisloor"/>
						<columnsMapping to="std_evn" from="std_cisloev"/>
						<columnsMapping to="std_district"/>
						<columnsMapping to="std_post_office"/>
						<columnsMapping to="std_region"/>
						<columnsMapping to="sco_address"/>
						<columnsMapping to="exp_address"/>
						<columnsMapping to="lbl_address"/>
						<columnsMapping to="pat_address"/>
					</columnMappings>
				</mappingEndPoint>
			</mappings>
			<parameters>
				<use_extended_patterns>true</use_extended_patterns>
			</parameters>
		</properties>
		<visual-constraints bounds="216,408,-1,-1" layout="vertical"/>
	</component>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Component" endpoint="out"/>
		<target step="Column Assigner" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (counter_adresa_clean_in) --><step id="counter_adresa_clean_in" className="com.ataccama.dqc.tasks.flow.RecordCounter" disabled="false" mode="BYPASS">
		<properties reportPerfPerBatch="true" append="true" reportFileName="\\logger" timeStampFormat="yyyy-MM-dd HH:mm:ss" batchSize="100000" reportPerfPerSecond="true">
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="216,240,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="counter_adresa_clean_in" endpoint="out"/>
		<target step="Component" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (counter_adresa_clean_out) --><step id="counter_adresa_clean_out" className="com.ataccama.dqc.tasks.flow.RecordCounter" disabled="false" mode="BYPASS">
		<properties reportPerfPerBatch="true" append="true" reportFileName="\\logger" timeStampFormat="yyyy-MM-dd HH:mm:ss" batchSize="100000" reportPerfPerSecond="true">
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="216,576,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="counter_adresa_clean_out" endpoint="out"/>
		<target step="out" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (in) --><step id="in" className="com.ataccama.dqc.tasks.common.usersteps.io.InputStep" disabled="false" mode="NORMAL">
		<properties>
			<columns>
				<columnDef name="id" type="LONG"/>
				<columnDef name="eng_source_timestamp" type="DATETIME"/>
				<columnDef name="eng_active" type="BOOLEAN"/>
				<columnDef name="eng_origin" type="STRING"/>
				<columnDef name="eng_source_system" type="STRING"/>
				<columnDef name="eng_last_update_date" type="DATETIME"/>
				<columnDef name="eng_last_source_update_date" type="DATETIME"/>
				<columnDef name="eng_creation_date" type="DATETIME"/>
				<columnDef name="eng_deletion_date" type="DATETIME"/>
				<columnDef name="eng_activation_date" type="DATETIME"/>
				<columnDef name="eng_deactivation_date" type="DATETIME"/>
				<columnDef name="source_id" type="STRING"/>
				<columnDef name="src_ruian" type="STRING"/>
				<columnDef name="src_ulice" type="STRING"/>
				<columnDef name="src_cislop" type="STRING"/>
				<columnDef name="src_cisloev" type="STRING"/>
				<columnDef name="src_cisloor" type="STRING"/>
				<columnDef name="src_mesto" type="STRING"/>
				<columnDef name="src_psc_id" type="STRING"/>
				<columnDef name="eng_external_record" type="BOOLEAN"/>
				<columnDef name="eng_change_type" type="STRING"/>
				<columnDef name="eng_activity_change_type" type="STRING"/>
			</columns>
			<shadowColumns>
				<shadowColumnDef name="std_ruian" type="STRING"/>
				<shadowColumnDef name="cio_ruian" type="STRING"/>
				<shadowColumnDef name="std_ulice" type="STRING"/>
				<shadowColumnDef name="cio_ulice" type="STRING"/>
				<shadowColumnDef name="sco_ulice" defaultExpression="0" type="INTEGER"/>
				<shadowColumnDef name="std_cislop" type="STRING"/>
				<shadowColumnDef name="cio_cislop" type="STRING"/>
				<shadowColumnDef name="std_cisloev" type="STRING"/>
				<shadowColumnDef name="cio_cisloev" type="STRING"/>
				<shadowColumnDef name="std_cisloor" type="STRING"/>
				<shadowColumnDef name="cio_cisloor" type="STRING"/>
				<shadowColumnDef name="std_mesto" type="STRING"/>
				<shadowColumnDef name="cio_mesto" type="STRING"/>
				<shadowColumnDef name="std_psc_id" type="STRING"/>
				<shadowColumnDef name="cio_psc_id" type="STRING"/>
				<shadowColumnDef name="sco_psc_id" defaultExpression="0" type="INTEGER"/>
			</shadowColumns>
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="216,144,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="in" endpoint="out"/>
		<target step="counter_adresa_clean_in" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (out) --><step id="out" className="com.ataccama.dqc.tasks.common.usersteps.io.OutputStep" disabled="false" mode="NORMAL">
		<properties>
			<requiredColumns>
				<requiredColumn name="id" type="LONG"/>
				<requiredColumn name="std_ruian" type="STRING"/>
				<requiredColumn name="cio_ruian" type="STRING"/>
				<requiredColumn name="std_ulice" type="STRING"/>
				<requiredColumn name="cio_ulice" type="STRING"/>
				<requiredColumn name="sco_ulice" type="INTEGER"/>
				<requiredColumn name="std_cislop" type="STRING"/>
				<requiredColumn name="cio_cislop" type="STRING"/>
				<requiredColumn name="std_cisloev" type="STRING"/>
				<requiredColumn name="cio_cisloev" type="STRING"/>
				<requiredColumn name="std_cisloor" type="STRING"/>
				<requiredColumn name="cio_cisloor" type="STRING"/>
				<requiredColumn name="std_mesto" type="STRING"/>
				<requiredColumn name="cio_mesto" type="STRING"/>
				<requiredColumn name="std_psc_id" type="STRING"/>
				<requiredColumn name="cio_psc_id" type="STRING"/>
				<requiredColumn name="sco_psc_id" type="INTEGER"/>
			</requiredColumns>
			<comm:comment>DO NOT ALTER! This step was automatically generated from the model. Your changes will be discarded when you re-generate this plan!</comm:comment>
		</properties>
		<visual-constraints bounds="216,672,-1,-1" layout="vertical"/>
	</step>



<modelComment bounds="24,0,1081,97" borderColor="183,183,0" backgroundColor="255,255,180" foregroundColor="51,51,51">•	Create or add logic to cleanse attributes. 
•	Then store the result into std values  (best cleansed value) or optionally also into cio values (cleansed instance output – best value available created as nvl(std_xxx, precleansed value or potentionally src_xxx). 
•	If translation dictionary used (dic_ prefixed values available in this plan), map the dic values into appropriate std and/or cio attributes to complete the dictionary translation process.
•	Also you can store scores or explanations.
Warning: there shouldn’t be any aggregation logic used</modelComment>

</purity-config>