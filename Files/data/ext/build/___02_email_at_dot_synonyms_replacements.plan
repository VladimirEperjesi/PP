<?xml version='1.0' encoding='UTF-8'?>
<purity-config xmlns:comm="http://www.ataccama.com/purity/comment" version="10.5.0.ga-2016-06-24">
	<references/>
	<component-mappings>
		<propertyMappings/>
	</component-mappings>

<!-- (Assemble synonyms) --><step id="Assemble synonyms" className="com.ataccama.dqc.tasks.expressions.ColumnAssigner" disabled="false" mode="NORMAL">
		<properties>
			<assignments>
				<assignment column="pattern">
					<expression>case(
	trash == &#39;0&#39;, &quot;&lt;&quot; + repl_patt + &quot;&gt;&quot;,
	trash == &#39;1&#39;, &quot;[&quot; + repl_patt + &quot;]&quot;,
	trash == &#39;2&#39;, &quot;{&quot; + repl_patt + &quot;}&quot;,
	trash == &#39;3&#39;, &quot;(&quot; + repl_patt + &quot;)&quot;
	//,trash == &#39;4&#39;, &quot;-&quot; + repl_patt + &quot;-&quot;
)</expression>
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
				</assignment>
				<assignment expression="&#39;☃&#39;+repl+&#39;☠&#39;" column="repl">
					<scorer>
						<scoringEntries>
							<scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
						</scoringEntries>
					</scorer>
					<comm:comment>Add snowman (&#39;☃&#39;) and skull (&#39;☠&#39;) char, so we can remove spaces before/after replacement</comm:comment>
				</assignment>
			</assignments>
			<comm:comment>Enclose synonym with [],&lt;&gt;, {} or ()</comm:comment>
		</properties>
		<visual-constraints bounds="384,240,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Assemble synonyms" endpoint="out"/>
		<target step="At and dot synonyms lookup builder" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (At and dot synonyms lookup builder) --><step id="At and dot synonyms lookup builder" className="com.ataccama.dqc.tasks.builders.LookupBuilder" disabled="false" mode="NORMAL">
		<properties approximativeIndex="false" compressed="false" duplicities="FIRST" bestDistanceIndex="false" fileName="pathvar://DATA/ext/lkp/___email_at_dot_synonyms_replacements.lkp" bidirectApproximativeIndex="false" key="pattern">
			<additionalColumns>
				<columnExprDef expression="repl" name="replacement"/>
			</additionalColumns>
			<matchingValue doRemoveRepeatedChars="false" doSqueezeWS="true" supportedCharacters="[:all:]-[:white:]" doRemoveDia="false" doUpperCase="false"/>
			<userMetadata>
				<items/>
			</userMetadata>
			<comm:comment>Builds lookup with at-sign and dot synonyms.</comm:comment>
		</properties>
		<visual-constraints bounds="384,312,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="At and dot synonyms lookup builder" endpoint="rejected"/>
		<target step="Trash" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Multiply records) --><step id="Multiply records" className="com.ataccama.dqc.tasks.text.Splitter" disabled="false" mode="NORMAL">
		<properties allSentenceColumn="&quot;0 1 2 3&quot;" oneWordColumn="trash">
			<separatorConfig includeSeparators="" lowerCaseLetters="false" excludeSeparators="" digits="false" upperCaseLetters="false"/>
			<comm:comment>Multiply records.</comm:comment>
		</properties>
		<visual-constraints bounds="384,168,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="Multiply records" endpoint="out"/>
		<target step="Assemble synonyms" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<!-- (Trash) --><step id="Trash" className="com.ataccama.dqc.tasks.io.Trash" disabled="false" mode="NORMAL">
		<properties>
			<comm:comment>Trash.</comm:comment>
		</properties>
		<visual-constraints bounds="384,384,-1,-1" layout="vertical"/>
	</step>



<!-- (___email_at_dot_replacement_patterns) --><step id="___email_at_dot_replacement_patterns" className="com.ataccama.dqc.tasks.io.text.read.TextFileReader" disabled="false" mode="NORMAL">
		<properties stringQualifier="&quot;" lineSeparator="\r\n" fieldSeparator=";" lineMaxReadLength="65536" numberOfLinesInHeader="1" fileName="pathvar://DATA/ext/src/___email_at_dot_replacement_patterns.csv" encoding="UTF-8" numberOfLinesInFooter="0" compression="NONE" stringQualifierEscape="&quot;">
			<columns>
				<textReaderColumn name="repl_patt" type="STRING" ignore="false"/>
				<textReaderColumn name="repl" type="STRING" ignore="false"/>
			</columns>
			<dataFormatParameters trueValue="true" falseValue="false" thousandsSeparator="" dateFormatLocale="en_US" dateTimeFormat="yy-MM-dd HH:mm:ss" decimalSeparator="." dayFormat="yy-MM-dd"/>
			<errorHandlingStrategy rejectFileName="rejected.txt">
				<errorInstructions>
					<errorInstruction putToLog="true" errorType="EXTRA_DATA" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="LONG_LINE" dataStrategy="STOP" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="PROCESSING_ERROR" dataStrategy="STOP" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="INVALID_DATE" dataStrategy="READ_POSSIBLE" putToReject="false"/>
					<errorInstruction putToLog="true" errorType="SHORT_LINE" dataStrategy="READ_POSSIBLE" putToReject="true"/>
					<errorInstruction putToLog="true" errorType="UNPARSABLE_FIELD" dataStrategy="NULL_VALUE" putToReject="false"/>
				</errorInstructions>
			</errorHandlingStrategy>
			<shadowColumns>
				<shadowColumnDef name="pattern" type="STRING"/>
				<shadowColumnDef name="trash" type="STRING"/>
			</shadowColumns>
			<comm:comment>Source file.</comm:comment>
		</properties>
		<visual-constraints bounds="384,96,-1,-1" layout="vertical"/>
	</step>
	<connection className="com.ataccama.dqc.model.elements.connections.StandardFlowConnection" disabled="false">
		<source step="___email_at_dot_replacement_patterns" endpoint="out"/>
		<target step="Multiply records" endpoint="in"/>
		<visual-constraints>
			<bendpoints/>
		</visual-constraints>
	</connection>



<modelComment bounds="72,168,366,121" borderColor="183,183,0" backgroundColor="128,255,255" foregroundColor="51,51,51">Enclose every synonym in [], &lt;&gt;, {} and (),
for each create new record.


Add snowman (&#39;☃&#39;) and skull (&#39;☠&#39;) char, 
so we can remove spaces before/after replacement</modelComment>



<modelComment bounds="648,120,373,217" borderColor="183,183,0" backgroundColor="255,255,180" foregroundColor="51,51,51">Description
1. Source file contains two columns
 - repl_patt (value)
 - repl (symbol)
2. Create multipli records (4 times)
3. Each of multiple records has different brackets with value
4. Set lookup - key is value with brackets, symbol
5. use special chars, so we know, where patter was replaced</modelComment>

</purity-config>