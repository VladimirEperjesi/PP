<?xml version='1.0' encoding='utf-8'?>
<configDoc screen="images/screen_cz_name_declension_simple.comp.png" cfgFilePath="workspace://component_manager/component/cz_name_declension_simple.comp" runtimeVersion="8.0.5.ga-2014-04-22" companyImage="images/logo_about.png" fileName="cz_name_declension_simple.comp" date="2014-06-12 08:22:19" xmlns:comm="http://www.ataccama.com/purity/comment" version="1.0">
  <generatorMeta name="Master Data Center 8.0.5" company="Ataccama Corporation" about="{0}

Version: {1}

Copyright © 2002-{2} {3} All rights reserved.

Your use of the product is subject to the {0} end user license agreement." date="2014-06-12 08:22:41"/>
  <configAlg name="in (Integration Input)" image="images/InputStep.large.png" class="com.ataccama.dqc.tasks.common.usersteps.io.InputStep">
    <properties>
      <columns>
        <columnDef name="src_first_name" type="STRING">
          <comm:comment>Input first name</comm:comment>
        </columnDef>
        <columnDef name="src_middle_name" type="STRING">
          <comm:comment>Input middle name</comm:comment>
        </columnDef>
        <columnDef name="src_last_name" type="STRING">
          <comm:comment>Input last name</comm:comment>
        </columnDef>
        <columnDef name="src_gender" type="STRING">
          <comm:comment>Input gender</comm:comment>
        </columnDef>
      </columns>
      <shadowColumns/>
    </properties>
  </configAlg>
  <configAlg name="Add Columns (Alter Format)" image="images/AlterFormat.large.png" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns>
        <addedColumn name="out_fn_accusative" type="STRING">
          <comm:comment>First name in acccusative</comm:comment>
        </addedColumn>
        <addedColumn name="out_fn_vocative" type="STRING">
          <comm:comment>First name in vocative</comm:comment>
        </addedColumn>
        <addedColumn name="out_mn_accusative" type="STRING">
          <comm:comment>Middle name in accusative</comm:comment>
        </addedColumn>
        <addedColumn name="out_mn_vocative" type="STRING">
          <comm:comment>Middle name in vocative</comm:comment>
        </addedColumn>
        <addedColumn name="out_ln_accusative" type="STRING">
          <comm:comment>Last name in accusative</comm:comment>
        </addedColumn>
        <addedColumn name="out_ln_vocative" type="STRING">
          <comm:comment>Last name in vocative</comm:comment>
        </addedColumn>
        <addedColumn name="exp_declension" type="STRING">
          <comm:comment>Explains, why some (all) name parts were not declined</comm:comment>
        </addedColumn>
        <addedColumn name="sco_declension" type="INTEGER">
          <comm:comment>Score of input values</comm:comment>
        </addedColumn>
      </addedColumns>
      <removedColumns/>
    </properties>
  </configAlg>
  <configAlg name="Add Internal Columns (Alter Format)" image="images/AlterFormat.large.png" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns>
        <addedColumn name="pur_gender" type="STRING"/>
        <addedColumn name="pur_first_name" type="STRING"/>
        <addedColumn name="pur_middle_name" type="STRING"/>
        <addedColumn name="pur_last_name" type="STRING"/>
        <addedColumn name="pur_ln_no_declension_parts" type="STRING"/>
        <addedColumn name="pur_ln_last_part" type="STRING"/>
        <addedColumn name="out_ln_last_part_vocative" type="STRING"/>
        <addedColumn name="out_ln_last_part_accusative" type="STRING"/>
        <addedColumn name="flg_fn_invalid" type="BOOLEAN"/>
        <addedColumn name="flg_mn_invalid" type="BOOLEAN"/>
        <addedColumn name="flg_ln_invalid" type="BOOLEAN"/>
      </addedColumns>
      <removedColumns/>
      <comm:comment>Add Internal Columns</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Decode values (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment column="pur_gender">
          <expression>//decode(src_gender, &#39;XNA&#39;, null, src_gender)
decode(upper(src_gender), &#39;M&#39;, &#39;M&#39;, &#39;F&#39;, &#39;F&#39;, null )</expression>
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="capitalize(decode(src_first_name, &#39;XNA&#39;, null, src_first_name))" column="pur_first_name">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="capitalize(decode(src_middle_name, &#39;XNA&#39;, null, src_middle_name))" column="pur_middle_name">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="capitalize(decode(src_last_name, &#39;XNA&#39;, null, src_last_name))" column="pur_last_name">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>Create pur values</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Empty name or gender (Condition)" image="images/Condition.large.png" class="com.ataccama.dqc.tasks.conditions.Condition">
    <properties>
      <condition>(pur_first_name is null and pur_middle_name is null and pur_last_name is null)
or
pur_gender is null</condition>
      <comm:comment>Check populated gender and at least one part of the name</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Snowman (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="replace(pur_last_name, &#39; &#39;, &#39;☃&#39;)" column="pur_last_name">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>Replace spaces with snowman</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Get last word of last name (Regex Matching)" image="images/RegexMatchingAlgorithm.large.png" class="com.ataccama.dqc.tasks.clean.RegexMatchingAlgorithm">
    <properties expression="pur_last_name" appendRegexNameColumn="false" appendRegexNameColumnSeparator=" ">
      <noMatchColumns/>
      <regExpressions>
        <regExpression pattern="([\p{L}☃-]*?)([\p{L}]*)" name="Supported chars" multiplicative="false" ignoreCase="true" partialMatch="false">
          <resultColumns>
            <regexOutputColumn name="pur_ln_no_declension_parts" substitution="$1"/>
            <regexOutputColumn name="pur_ln_last_part" substitution="$2"/>
          </resultColumns>
          <comm:comment>Devide last name in two parts:
second - last word (letters only)
first - group of letters, dashes and snowman symbols</comm:comment>
        </regExpression>
      </regExpressions>
      <scorer>
        <scoringEntries>
          <scoringEntry score="0" explainAs="STN_NULL" explain="true" key="STN_NULL"/>
          <scoringEntry score="0" explainAs="STN_MATCHED" explain="true" key="STN_MATCHED"/>
          <scoringEntry score="0" explainAs="STN_NOT_MATCHED" explain="true" key="STN_NOT_MATCHED"/>
        </scoringEntries>
      </scorer>
      <comm:comment>Devide last name in two parts:
second - last word (letters only)
first - group of letters, dashes and snowman symbols</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Check invalidity (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="trashNonLetters(pur_first_name) != pur_first_name" column="flg_fn_invalid">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="trashNonLetters(pur_middle_name) != pur_middle_name" column="flg_mn_invalid">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment column="flg_ln_invalid">
          <expression>//trashNonLetters(pur_last_name) != pur_last_name
pur_ln_last_part is null and pur_last_name is not null</expression>
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>Check for invalid characters</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Gender M (Condition)" image="images/Condition.large.png" class="com.ataccama.dqc.tasks.conditions.Condition">
    <properties condition="pur_gender = &#39;M&#39;">
      <comm:comment>Male names vs. female names</comm:comment>
    </properties>
  </configAlg>
  <configAlg definitionFile="comp_declension_female" name="Decline female first name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_female.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_first_name"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out">
          <columnMappings>
            <columnsMapping to="accusative" from="out_fn_accusative"/>
            <columnsMapping to="vocative" from="out_fn_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline female first name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <reference name="comp_declension_female"/>
  <configAlg definitionFile="comp_declension_female" name="Decline female middle name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_female.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_middle_name"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out">
          <columnMappings>
            <columnsMapping to="accusative" from="out_mn_accusative"/>
            <columnsMapping to="vocative" from="out_mn_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline female middle name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <configAlg definitionFile="comp_declension_female" name="Decline female (last word of) last name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_female.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_ln_last_part"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out">
          <columnMappings>
            <columnsMapping to="accusative" from="out_ln_last_part_accusative"/>
            <columnsMapping to="vocative" from="out_ln_last_part_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline female (last word of) last name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <configAlg definitionFile="comp_declension_male" name="Decline male first name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_male.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_first_name"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out 2">
          <columnMappings>
            <columnsMapping to="accusative" from="out_fn_accusative"/>
            <columnsMapping to="vocative" from="out_fn_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline male first name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <reference name="comp_declension_male"/>
  <configAlg definitionFile="comp_declension_male" name="Decline male middle name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_male.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_middle_name"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out 2">
          <columnMappings>
            <columnsMapping to="accusative" from="out_mn_accusative"/>
            <columnsMapping to="vocative" from="out_mn_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline male middle name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <configAlg definitionFile="comp_declension_male" name="Decline male (last word of) last name (Component)" image="images/componentStep.png" class="com.ataccama.dqc.tasks.common.usersteps.ComponentStep">
    <properties fileName="internal/cz_name_declension_simple/comp_declension_male.comp">
      <mappings>
        <mappingEndPoint name="in">
          <columnMappings>
            <columnsMapping to="name" from="pur_ln_last_part"/>
          </columnMappings>
        </mappingEndPoint>
        <mappingEndPoint name="out 2">
          <columnMappings>
            <columnsMapping to="accusative" from="out_ln_last_part_accusative"/>
            <columnsMapping to="vocative" from="out_ln_last_part_vocative"/>
          </columnMappings>
        </mappingEndPoint>
      </mappings>
      <comm:comment>Decline male (last word of) last name</comm:comment>
      <parameters/>
    </properties>
  </configAlg>
  <configAlg name="Union Same (Union Same)" image="images/UnionSame.large.png" class="com.ataccama.dqc.tasks.conditions.UnionSame">
    <properties>
      <comm:comment>Union female and male names</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Only first form (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="word(out_fn_accusative, 0, &#39;;&#39;)" column="out_fn_accusative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="word(out_fn_vocative, 0, &#39;;&#39;)" column="out_fn_vocative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="word(out_mn_accusative, 0, &#39;;&#39;)" column="out_mn_accusative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="word(out_mn_vocative, 0, &#39;;&#39;)" column="out_mn_vocative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="word(out_ln_last_part_accusative, 0, &#39;;&#39;)" column="out_ln_last_part_accusative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="word(out_ln_last_part_vocative, 0, &#39;;&#39;)" column="out_ln_last_part_vocative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
      </assignments>
    </properties>
  </configAlg>
  <configAlg name="Concatenate last name parts (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="replace(pur_ln_no_declension_parts + out_ln_last_part_accusative, &#39;☃&#39;, &#39; &#39;)" column="out_ln_accusative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
        <assignment expression="replace(pur_ln_no_declension_parts + out_ln_last_part_vocative, &#39;☃&#39;, &#39; &#39;)" column="out_ln_vocative">
          <scorer>
            <scoringEntries/>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>Concatenate undeclined and declined parts of last name</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Remove declension if invalid flag (Column Assigner)" image="images/ColumnAssigner.large.png" class="com.ataccama.dqc.tasks.expressions.ColumnAssigner">
    <properties>
      <assignments>
        <assignment expression="iif(flg_fn_invalid, &quot;&quot;, out_fn_accusative)" column="out_fn_accusative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="iif(flg_mn_invalid, &quot;&quot;, out_mn_accusative)" column="out_mn_accusative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="iif(flg_ln_invalid, &quot;&quot;, out_ln_accusative)" column="out_ln_accusative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="iif(flg_fn_invalid, &quot;&quot;, out_fn_vocative)" column="out_fn_vocative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="iif(flg_mn_invalid, &quot;&quot;, out_mn_vocative)" column="out_mn_vocative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
        <assignment expression="iif(flg_ln_invalid, &quot;&quot;, out_ln_vocative)" column="out_ln_vocative">
          <scorer>
            <scoringEntries>
              <scoringEntry score="0" explainAs="CA_CHANGED" explain="false" key="CA_CHANGED"/>
            </scoringEntries>
          </scorer>
        </assignment>
      </assignments>
      <comm:comment>Remove declension (Accusative and Vocative) if invalid flag</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Score input values (Simple Scoring)" image="images/SimpleScoring.large.png" class="com.ataccama.dqc.tasks.scoring.SimpleScoring">
    <properties defaultScoreColumn="sco_declension" defaultExplainColumn="exp_declension">
      <scoringCases>
        <scoringCase explanation="&#39;DECLENSION_MISSING_INPUT_PARAMS&#39;" score="10000000">
          <condition>(pur_first_name is null and pur_middle_name is null and pur_last_name is null)
or
src_gender is null</condition>
        </scoringCase>
        <scoringCase condition="src_gender is not null and pur_gender is null" explanation="&#39;DECLENSION_INVALID_GENDER&#39;" score="10000000"/>
        <scoringCase condition="flg_fn_invalid" explanation="&#39;DECLENSION_FN_INVALID&#39;" score="10000"/>
        <scoringCase condition="flg_mn_invalid" explanation="&#39;DECLENSION_MN_INVALID&#39;" score="10000"/>
        <scoringCase condition="flg_ln_invalid" explanation="&#39;DECLENSION_LN_INVALID&#39;" score="10000"/>
        <scoringCase condition="not(flg_fn_invalid) and pur_first_name is not null and out_fn_vocative is null" explanation="&#39;DECLENSION_FN_UNDECLINED&#39;" score="10000"/>
        <scoringCase condition="not(flg_mn_invalid) and pur_middle_name is not null and out_mn_vocative is null" explanation="&#39;DECLENSION_MN_UNDECLINED&#39;" score="10000"/>
        <scoringCase condition="not(flg_ln_invalid) and pur_last_name is not null and out_ln_vocative is null" explanation="&#39;DECLENSION_LN_UNDECLINED&#39;" score="10000"/>
      </scoringCases>
      <comm:comment>Score records</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="Remove internal columns (Alter Format)" image="images/AlterFormat.large.png" class="com.ataccama.dqc.tasks.flow.AlterFormat">
    <properties>
      <addedColumns/>
      <removedColumns>
        <columnRef name="pur_gender"/>
        <columnRef name="pur_first_name"/>
        <columnRef name="pur_middle_name"/>
        <columnRef name="pur_last_name"/>
        <columnRef name="pur_ln_no_declension_parts"/>
        <columnRef name="pur_ln_last_part"/>
        <columnRef name="out_ln_last_part_vocative"/>
        <columnRef name="out_ln_last_part_accusative"/>
        <columnRef name="flg_fn_invalid"/>
        <columnRef name="flg_mn_invalid"/>
        <columnRef name="flg_ln_invalid"/>
      </removedColumns>
      <comm:comment>Remove internal columns</comm:comment>
    </properties>
  </configAlg>
  <configAlg name="out (Integration Output)" image="images/OutputStep.large.png" class="com.ataccama.dqc.tasks.common.usersteps.io.OutputStep">
    <properties>
      <requiredColumns>
        <requiredColumn name="out_fn_accusative" type="STRING">
          <comm:comment>First name in acccusative</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_fn_vocative" type="STRING">
          <comm:comment>First name in vocative</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_mn_accusative" type="STRING">
          <comm:comment>Middle name in accusative</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_mn_vocative" type="STRING">
          <comm:comment>Middle name in vocative</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_ln_accusative" type="STRING">
          <comm:comment>Last name in accusative</comm:comment>
        </requiredColumn>
        <requiredColumn name="out_ln_vocative" type="STRING">
          <comm:comment>Last name in vocative</comm:comment>
        </requiredColumn>
        <requiredColumn name="exp_declension" type="STRING">
          <comm:comment>Explains, why some (all) name parts were not declined</comm:comment>
        </requiredColumn>
        <requiredColumn name="sco_declension" type="INTEGER">
          <comm:comment>Score of input values</comm:comment>
        </requiredColumn>
      </requiredColumns>
    </properties>
  </configAlg>
</configDoc>